on early-init
    start ueventd

on init
    export PATH /sbin
    export LD_LIBRARY_PATH .:/sbin
    export ANDROID_ROOT /system
    export ANDROID_DATA /data
    export EXTERNAL_STORAGE /sdcard

    symlink /system/etc /etc
    
    mkdir /sdcard
    mkdir /system
    mkdir /data
    mkdir /cache
    mkdir /mnt
    mkdir /mnt/modem
    mkdir /mdmbackup
    mount /tmp /tmp tmpfs

    chown root shell /tmp
    chmod 0775 /tmp
    #wangguibo added busybox.
    chmod 777 /sbin/busybox
    chmod 777 /sdcard
    chmod 777 /system
    chmod 777 /mnt
    chmod 777 /mnt/modem
    chmod 777 /mdmbackup
    
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 18D1
    write /sys/class/android_usb/android0/idProduct D001
    write /sys/class/android_usb/android0/functions adb
    write /sys/class/android_usb/android0/iManufacturer ${ro.product.manufacturer}
    write /sys/class/android_usb/android0/iProduct ${ro.product.model}
    write /sys/class/android_usb/android0/iSerial ${ro.serialno}


on boot

    ifup lo
    hostname localhost
    domainname localdomain
    
    start console
    class_start default

service ueventd /sbin/ueventd
    critical

service recovery /sbin/recovery

service adbd /sbin/adbd recovery
    class default
    
service console /system/bin/sh
        class core
        console
        user shell
        group log


# Always start adbd on userdebug and eng builds
on property:ro.debuggable=1
    write /sys/class/android_usb/android0/enable 1
    start adbd

# Restart adbd so it can run as root
on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    restart adbd
    write /sys/class/android_usb/android0/enable 1
